name: Publish Image & Package

permissions:
  contents: 'read'
  packages: 'write'

on:
  push:
    tags:
      - 'v*'

defaults:
  run:
    shell: bash

env:
  CI: true
  DOCKER_BUILDKIT: 1
  # Enable debug logging for actions
  ACTIONS_RUNNER_DEBUG: true

jobs:
  test:
    # run only on 'main' branch
    if: github.ref == 'refs/heads/main'
    name: 'Lint, Type Check, Test, & Build'
    strategy:
      matrix:
        os: ['ubuntu-latest']
        node_version: ['lts/*']
        pnpm_version: ['latest']
    runs-on: ${{ matrix.os }}
    steps:
      - name: Checkout
        uses: actions/checkout@v4.1.1

      - name: Setup pnpm
        uses: pnpm/action-setup@v2.4.0
        with:
          version: ${{ matrix.pnpm_version }}

      - name: Setup Node.js
        uses: actions/setup-node@v3.8.1
        with:
          node-version: ${{ matrix.node_version }}
          cache: 'pnpm'

      - name: Install Dependencies
        run: pnpm install --frozen-lockfile

      - name: Lint
        run: |
          pnpm format
          pnpm lint

      - name: Type Check
        run: pnpm typecheck

      - name: Test
        run: pnpm test

      - name: Build
        run: pnpm build

  docker:
    # run only on 'main' branch
    if: github.ref == 'refs/heads/main'
    name: 'Publish Docker Image to Docker Hub and GitHub Container Registry'
    needs: [test]
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4.1.1

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v3.0.0

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3.0.0

      - name: Cache Docker layers
        uses: actions/cache@v3.3.2
        with:
          path: /tmp/.buildx-cache
          key: ${{ runner.os }}-buildx-${{ github.sha }}
          restore-keys: |
            ${{ runner.os }}-buildx-

      - name: Login to Docker Hub
        uses: docker/login-action@v3.0.0
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Login to GitHub Container Registry
        uses: docker/login-action@v3.0.0
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Extract metadata (tags, labels)
        id: meta
        uses: docker/metadata-action@v5.0.0
        with:
          images: ghcr.io/${{ github.repository }}
          github-token: ${{ secrets.GITHUB_TOKEN }}

      - name: Test build
        uses: docker/build-push-action@v5.0.0
        with:
          context: .
          load: true
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}

      - name: Build and push
        uses: docker/build-push-action@v5.0.0
        with:
          context: .
          push: true
          platforms: linux/amd64,linux/arm64
          labels: ${{ steps.meta.outputs.labels }}
          tags: ${{ steps.meta.outputs.tags }}
          cache-from: type=local,src=/tmp/.buildx-cache
          cache-to: type=local,dest=/tmp/.buildx-cache-new,mode=max
      - # Temp fix
        # https://github.com/docker/build-push-action/issues/252
        # https://github.com/moby/buildkit/issues/1896
        name: Move cache
        run: |
          rm -rf /tmp/.buildx-cache
          mv /tmp/.buildx-cache-new /tmp/.buildx-cache

  publish-npm:
    # run only on 'main' branch
    if: github.ref == 'refs/heads/main'
    name: 'Publish Package to npm Registry'
    needs: [test]
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4.1.1

      - name: Setup pnpm
        uses: pnpm/action-setup@v2.4.0
        with:
          version: 'latest'

      - name: Setup Node.js
        uses: actions/setup-node@v3.8.1
        with:
          node-version: 'lts/*'
          cache: 'pnpm'
          registry-url: 'https://registry.npmjs.org'

      - name: Install Dependencies
        run: pnpm install --frozen-lockfile

      - name: 'Publish'
        env:
          NPM_AUTH_TOKEN: ${{ secrets.NPM_TOKEN }}
          NODE_AUTH_TOKEN: ${{ secrets.NPM_TOKEN }}
          # https://docs.npmjs.com/generating-provenance-statements
          NPM_CONFIG_PROVENANCE: true
        run: |
          pnpm publish --access public --registry https://registry.npmjs.org --no-git-checks

  publish-gpr:
    # run only on 'main' branch
    if: github.ref == 'refs/heads/main'
    name: 'Publish Package to GitHub Package Registry'
    needs: [test]
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Setup pnpm
        uses: pnpm/action-setup@v2.4.0
        with:
          version: 'latest'

      - name: Setup Node.js
        uses: actions/setup-node@v3.8.1
        with:
          node-version: 'lts/*'
          cache: 'pnpm'
          registry-url: 'https://npm.pkg.github.com'

      - name: Install Dependencies
        run: pnpm install --frozen-lockfile

      - name: Update ~/.npmrc
        run: |
          echo "//npm.pkg.github.com:_authToken=${{ secrets.GITHUB_TOKEN }}" >> .npmrc

      - name: 'Publish'
        env:
          NPM_AUTH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          NODE_AUTH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          # https://docs.npmjs.com/generating-provenance-statements
          NPM_CONFIG_PROVENANCE: true
        run: |
          pnpm publish --access public --registry https://npm.pkg.github.com --no-git-checks

  # Generate GitHub Release Changelog
  Changelog:
    if: github.ref == 'refs/heads/main'
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4.1.1
        with:
          fetch-depth: 0
      - name: Setup Node.js
        uses: actions/setup-node@v3.8.1
        with:
          node-version: 'lts/*'
      - name: Generate Changelog
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: npx changelogithub
